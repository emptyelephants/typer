{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/migueltrinidad/Play/typer/components/inputBar.js\";\nimport React, { useState } from 'react';\n\nvar handleNextWord = function handleNextWord(word) {\n  return word[word.length - 1] === ' ' ? '' : word;\n};\n\nvar InputBar = function InputBar() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, name), React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setName(handleNextWord(e.target.value));\n    },\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nexport default InputBar;","map":{"version":3,"sources":["/Users/migueltrinidad/Play/typer/components/inputBar.js"],"names":["React","useState","handleNextWord","word","length","InputBar","name","setName","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI;AAAA,SAAKA,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAJ,KAA0B,GAA1B,GAAgC,EAAhC,GAAqCD,IAA1C;AAAA,CAA3B;;AAEA,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACGJ,QAAQ,EADX;AAAA;AAAA,MACdK,IADc;AAAA,MACRC,OADQ;;AAErB,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,IAAN,CADF,EAEE;AACE,IAAA,QAAQ,EAAE,kBAAAE,CAAC;AAAA,aAAID,OAAO,CAACL,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,CAAX;AAAA,KADb;AAEE,IAAA,KAAK,EAAEJ,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD,CAXD;;AAaA,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst handleNextWord = word => (word[word.length - 1] === ' ' ? '' : word);\n\nconst InputBar = () => {\n  const [name, setName] = useState();\n  return (\n    <>\n      <h3>{ name }</h3>\n      <input\n        onChange={e => setName(handleNextWord(e.target.value))}\n        value={name}\n      />\n    </>\n  );\n};\n\nexport default InputBar;\n"]},"metadata":{},"sourceType":"module"}