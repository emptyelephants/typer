{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/migueltrinidad/Play/typer/components/inputBar.js\";\nimport React, { useState } from 'react'; // e.target.value,\n// incrementWordIndex,\n// currentWord,\n// setCorrect,\n// handleLetterAccuracy,\n\nvar checkSpace = function checkSpace(userWord, incrementWordIndex, currentWord, setCorrect, handleLetterAccuracy) {\n  var letterIndex = userWord.length - 1; // ignore on empty word\n\n  if (userWord[0] === ' ') {\n    return '';\n  } // handle next word, check for correctness\n\n\n  if (userWord[letterIndex] === ' ') {\n    incrementWordIndex();\n    console.log('was the word right' + userWord.slice(0, letterIndex) === currentWord);\n    setCorrect(userWord.slice(0, letterIndex) === currentWord);\n    return '';\n  } // if the letter was correect\n\n\n  if (userWord[letterIndex] === currentWord[letterIndex]) {\n    return userWord;\n  } // if the letter was wrong\n\n\n  if (userWord[letterIndex] !== currentWord[letterIndex]) {\n    handleLetterAccuracy();\n    return userWord;\n  }\n\n  return userWord;\n};\n\nvar InputBar = function InputBar(props) {\n  var currentWord = props.currentWord,\n      incrementWordIndex = props.incrementWordIndex,\n      handleLetterAccuracy = props.handleLetterAccuracy,\n      wasCorrect = props.wasCorrect,\n      setCorrect = props.setCorrect;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userWord = _useState2[0],\n      setUserWord = _useState2[1];\n\n  var letterIndex = userWord.length;\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"letter index\", \" \".concat(letterIndex)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"the current is\", \" \".concat(currentWord)), React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setUserWord(checkSpace(e.target.value, incrementWordIndex, currentWord, setCorrect, handleLetterAccuracy));\n    },\n    value: userWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, wasCorrect && 'correct'));\n};\n\nexport default InputBar;","map":{"version":3,"sources":["/Users/migueltrinidad/Play/typer/components/inputBar.js"],"names":["React","useState","checkSpace","userWord","incrementWordIndex","currentWord","setCorrect","handleLetterAccuracy","letterIndex","length","console","log","slice","InputBar","props","wasCorrect","setUserWord","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CACjBC,QADiB,EAEjBC,kBAFiB,EAGjBC,WAHiB,EAIjBC,UAJiB,EAKjBC,oBALiB,EAMd;AACH,MAAMC,WAAW,GAAGL,QAAQ,CAACM,MAAT,GAAkB,CAAtC,CADG,CAGH;;AACA,MAAIN,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;AACvB,WAAO,EAAP;AACD,GANE,CAQH;;;AACA,MAAIA,QAAQ,CAACK,WAAD,CAAR,KAA0B,GAA9B,EAAmC;AACjCJ,IAAAA,kBAAkB;AAClBM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBR,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAkBJ,WAAlB,CAAtB,KAAyDH,WAArE;AACAC,IAAAA,UAAU,CAACH,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAkBJ,WAAlB,MAAmCH,WAApC,CAAV;AACA,WAAO,EAAP;AACD,GAdE,CAeH;;;AACA,MAAIF,QAAQ,CAACK,WAAD,CAAR,KAA0BH,WAAW,CAACG,WAAD,CAAzC,EAAwD;AACtD,WAAOL,QAAP;AACD,GAlBE,CAmBH;;;AACA,MAAIA,QAAQ,CAACK,WAAD,CAAR,KAA0BH,WAAW,CAACG,WAAD,CAAzC,EAAwD;AACtDD,IAAAA,oBAAoB;AACpB,WAAOJ,QAAP;AACD;;AACD,SAAOA,QAAP;AACD,CA/BD;;AAiCA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAExBT,WAFwB,GAOtBS,KAPsB,CAExBT,WAFwB;AAAA,MAGxBD,kBAHwB,GAOtBU,KAPsB,CAGxBV,kBAHwB;AAAA,MAIxBG,oBAJwB,GAOtBO,KAPsB,CAIxBP,oBAJwB;AAAA,MAKxBQ,UALwB,GAOtBD,KAPsB,CAKxBC,UALwB;AAAA,MAMxBT,UANwB,GAOtBQ,KAPsB,CAMxBR,UANwB;;AAAA,kBAQML,QAAQ,CAAC,EAAD,CARd;AAAA;AAAA,MAQnBE,QARmB;AAAA,MAQTa,WARS;;AAU1B,MAAMR,WAAW,GAAGL,QAAQ,CAACM,MAA7B;AACA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEOD,WAFP,EADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEOH,WAFP,EALF,EASE;AACE,IAAA,QAAQ,EAAE,kBAAAY,CAAC;AAAA,aAAID,WAAW,CAACd,UAAU,CACnCe,CAAC,CAACC,MAAF,CAASC,KAD0B,EAEnCf,kBAFmC,EAGnCC,WAHmC,EAInCC,UAJmC,EAKnCC,oBALmC,CAAX,CAAf;AAAA,KADb;AAQE,IAAA,KAAK,EAAEJ,QART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,UAAU,IAAI,SADjB,CAnBF,CADF;AAyBD,CApCD;;AAsCA,eAAeF,QAAf","sourcesContent":["import React, { useState } from 'react';\n\n// e.target.value,\n// incrementWordIndex,\n// currentWord,\n// setCorrect,\n// handleLetterAccuracy,\n\nconst checkSpace = (\n  userWord,\n  incrementWordIndex,\n  currentWord,\n  setCorrect,\n  handleLetterAccuracy,\n) => {\n  const letterIndex = userWord.length - 1;\n\n  // ignore on empty word\n  if (userWord[0] === ' ') {\n    return '';\n  }\n\n  // handle next word, check for correctness\n  if (userWord[letterIndex] === ' ') {\n    incrementWordIndex();\n    console.log('was the word right'+ userWord.slice(0, letterIndex) === currentWord);\n    setCorrect(userWord.slice(0, letterIndex) === currentWord);\n    return '';\n  }\n  // if the letter was correect\n  if (userWord[letterIndex] === currentWord[letterIndex]) {\n    return userWord;\n  }\n  // if the letter was wrong\n  if (userWord[letterIndex] !== currentWord[letterIndex]) {\n    handleLetterAccuracy();\n    return userWord;\n  }\n  return userWord;\n};\n\nconst InputBar = (props) => {\n  const {\n    currentWord,\n    incrementWordIndex,\n    handleLetterAccuracy,\n    wasCorrect,\n    setCorrect,\n  } = props;\n  const [userWord, setUserWord] = useState('');\n\n  const letterIndex = userWord.length;\n  return (\n    <>\n      <p>\n        letter index\n        {` ${letterIndex}`}\n      </p>\n      <p>\n        the current is\n        {` ${currentWord}`}\n      </p>\n      <input\n        onChange={e => setUserWord(checkSpace(\n          e.target.value,\n          incrementWordIndex,\n          currentWord,\n          setCorrect,\n          handleLetterAccuracy,\n        ))}\n        value={userWord}\n      />\n      <p>\n        {wasCorrect && 'correct'}\n      </p>\n    </>\n  );\n};\n\nexport default InputBar;\n"]},"metadata":{},"sourceType":"module"}