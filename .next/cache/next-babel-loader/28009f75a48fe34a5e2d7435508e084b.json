{"ast":null,"code":"var _jsxFileName = \"/Users/migueltrinidad/Play/typer/components/wordsDisplay.js\";\nimport React from \"react\";\n\nvar handleWordClass = function handleWordClass(mapIndex, wordIndex, wasCorrect) {\n  var theClassName = '';\n\n  if (mapIndex === wordIndex) {\n    theClassName += 'current ';\n  }\n\n  console.log('this bool ' + wasCorrect);\n\n  if (!wasCorrect) {\n    theClassName += 'wrong ';\n  }\n\n  return theClassName;\n};\n\nvar wordsAssembler = function wordsAssembler(words, wordIndex, wasCorrect) {\n  return words.map(function (word, index) {\n    return React.createElement(\"span\", {\n      className: handleWordClass(index, wordIndex, wasCorrect),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, word);\n  });\n};\n\nvar WordDisplay = function WordDisplay(props) {\n  console.log('rendered words');\n  var words = props.words,\n      wordIndex = props.wordIndex,\n      wasCorrect = props.wasCorrect;\n  var allWords = wordsAssembler(words, wordIndex, wasCorrect);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, allWords);\n};\n\nexport default WordDisplay;","map":{"version":3,"sources":["/Users/migueltrinidad/Play/typer/components/wordsDisplay.js"],"names":["handleWordClass","mapIndex","wordIndex","wasCorrect","theClassName","console","log","wordsAssembler","words","map","word","index","WordDisplay","props","allWords"],"mappings":";;;AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWC,SAAX,EAAsBC,UAAtB,EAAqC;AAC3D,MAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAIH,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BE,IAAAA,YAAY,IAAI,UAAhB;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeH,UAA3B;;AACA,MAAI,CAACA,UAAL,EAAiB;AACfC,IAAAA,YAAY,IAAI,QAAhB;AACD;;AAED,SAAOA,YAAP;AACD,CAZD;;AAcA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQN,SAAR,EAAmBC,UAAnB;AAAA,SACrBK,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,WACR;AAAM,MAAA,SAAS,EAAEX,eAAe,CAACW,KAAD,EAAQT,SAAR,EAAmBC,UAAnB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,IADH,CADQ;AAAA,GAAV,CADqB;AAAA,CAAvB;;AAQA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7BR,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAD6B,MAErBE,KAFqB,GAEYK,KAFZ,CAErBL,KAFqB;AAAA,MAEdN,SAFc,GAEYW,KAFZ,CAEdX,SAFc;AAAA,MAEHC,UAFG,GAEYU,KAFZ,CAEHV,UAFG;AAG7B,MAAMW,QAAQ,GAAGP,cAAc,CAACC,KAAD,EAAQN,SAAR,EAAmBC,UAAnB,CAA/B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,QADH,CADF;AAKD,CATD;;AAWA,eAAeF,WAAf","sourcesContent":["const handleWordClass = (mapIndex, wordIndex, wasCorrect) => {\n  let theClassName = '';\n\n  if (mapIndex === wordIndex) {\n    theClassName += 'current ';\n  }\n  console.log('this bool ' + wasCorrect);\n  if (!wasCorrect) {\n    theClassName += 'wrong ';\n  }\n\n  return theClassName;\n};\n\nconst wordsAssembler = (words, wordIndex, wasCorrect) => (\n  words.map((word, index) => (\n    <span className={handleWordClass(index, wordIndex, wasCorrect)}>\n      {word}\n    </span>\n  ))\n);\n\nconst WordDisplay = (props) => {\n  console.log('rendered words');\n  const { words, wordIndex, wasCorrect } = props;\n  const allWords = wordsAssembler(words, wordIndex, wasCorrect);\n  return (\n    <p>\n      {allWords}\n    </p>\n  );\n};\n\nexport default WordDisplay;\n"]},"metadata":{},"sourceType":"module"}