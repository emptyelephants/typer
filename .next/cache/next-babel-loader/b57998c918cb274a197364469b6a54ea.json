{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/migueltrinidad/Play/typer/pages/index.js\";\nimport React from \"react\";\n\n/* eslint-disable func-names */\nimport { useState } from 'react'; // import fetch from 'isomorphic-unfetch';\n\nimport InputBar from '../components/inputBar';\n\nvar Index = function Index() {\n  // stringfy total words, grab total letters then (total - accuracy)/(total)\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      wordIndex = _useState2[0],\n      _incrementWordIndex = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      wasCorrect = _useState4[0],\n      _setCorrect = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      wrongLetters = _useState6[0],\n      incrementWrongLetters = _useState6[1];\n\n  var words = ['dog', 'cat', 'test', 'west'];\n  var currentWord = words[wordIndex];\n  console.log('current' + wasCorrect);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Typer\"), React.createElement(InputBar, {\n    currentWord: currentWord,\n    incrementWordIndex: function incrementWordIndex() {\n      return _incrementWordIndex(wordIndex + 1);\n    },\n    handleLetterAccuracy: function handleLetterAccuracy() {\n      return incrementWrongLetters(wrongLetters + 1);\n    },\n    wasCorrect: wasCorrect,\n    setCorrect: function setCorrect(e) {\n      return _setCorrect(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"that was right\") && wasCorrect, \"wrong letters \".concat(wrongLetters));\n}; // Index.getInitialProps = async function () {\n//   const wordsApiKey = process.env.WORDS_API_KEY;\n//   const wordsApiBaseUrl = 'https://random-word-api.herokuapp.com';\n//   const res = await fetch(`${wordsApiBaseUrl}/word?key=${wordsApiKey}&number=${200}`);\n//   const words = await res.json();\n//   return {\n//     words,\n//   };\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/migueltrinidad/Play/typer/pages/index.js"],"names":["useState","InputBar","Index","wordIndex","incrementWordIndex","wasCorrect","setCorrect","wrongLetters","incrementWrongLetters","words","currentWord","console","log","e"],"mappings":";;;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB;AADkB,kBAEsBF,QAAQ,CAAC,CAAD,CAF9B;AAAA;AAAA,MAEXG,SAFW;AAAA,MAEAC,mBAFA;;AAAA,mBAGeJ,QAAQ,EAHvB;AAAA;AAAA,MAGXK,UAHW;AAAA,MAGCC,WAHD;;AAAA,mBAI4BN,QAAQ,CAAC,CAAD,CAJpC;AAAA;AAAA,MAIXO,YAJW;AAAA,MAIGC,qBAJH;;AAMlB,MAAMC,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,CAAd;AACA,MAAMC,WAAW,GAAGD,KAAK,CAACN,SAAD,CAAzB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYP,UAAxB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAEK,WADf;AAEE,IAAA,kBAAkB,EAAE;AAAA,aAAMN,mBAAkB,CAACD,SAAS,GAAG,CAAb,CAAxB;AAAA,KAFtB;AAGE,IAAA,oBAAoB,EAAE;AAAA,aAAMK,qBAAqB,CAACD,YAAY,GAAG,CAAhB,CAA3B;AAAA,KAHxB;AAIE,IAAA,UAAU,EAAEF,UAJd;AAKE,IAAA,UAAU,EAAE,oBAAAQ,CAAC;AAAA,aAAIP,WAAU,CAACO,CAAD,CAAd;AAAA,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyBR,UAT5B,0BAWoBE,YAXpB,EADF;AAeD,CAxBD,C,CA2BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeL,KAAf","sourcesContent":["/* eslint-disable func-names */\nimport { useState } from 'react';\n// import fetch from 'isomorphic-unfetch';\n\nimport InputBar from '../components/inputBar';\n\n\nconst Index = () => {\n  // stringfy total words, grab total letters then (total - accuracy)/(total)\n  const [wordIndex, incrementWordIndex] = useState(0);\n  const [wasCorrect, setCorrect] = useState();\n  const [wrongLetters, incrementWrongLetters] = useState(0);\n\n  const words = ['dog', 'cat', 'test', 'west'];\n  const currentWord = words[wordIndex];\n  console.log('current' + wasCorrect);\n  return (\n    <div>\n      <p>Typer</p>\n      <InputBar\n        currentWord={currentWord}\n        incrementWordIndex={() => incrementWordIndex(wordIndex + 1)}\n        handleLetterAccuracy={() => incrementWrongLetters(wrongLetters + 1)}\n        wasCorrect={wasCorrect}\n        setCorrect={e => setCorrect(e)}\n      />\n      {<p>that was right</p> && wasCorrect}\n\n      {`wrong letters ${wrongLetters}`}\n    </div>\n  );\n};\n\n\n// Index.getInitialProps = async function () {\n//   const wordsApiKey = process.env.WORDS_API_KEY;\n//   const wordsApiBaseUrl = 'https://random-word-api.herokuapp.com';\n//   const res = await fetch(`${wordsApiBaseUrl}/word?key=${wordsApiKey}&number=${200}`);\n//   const words = await res.json();\n\n//   return {\n//     words,\n//   };\n// };\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}