{"ast":null,"code":"var _jsxFileName = \"/Users/migueltrinidad/Play/typer/components/wordsDisplay.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\n\nvar wordsAssembler = function wordsAssembler(words, wordIndex, incorrectWords) {\n  return words.map(function (word, index) {\n    return React.createElement(WordState, {\n      current: wordIndex === index,\n      wasWrong: wordIndex > index && incorrectWords.includes(index),\n      upComing: wordIndex < index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, word);\n  });\n};\n\nvar WordDisplay = function WordDisplay(props) {\n  var words = props.words,\n      wordIndex = props.wordIndex,\n      incorrectWords = props.incorrectWords;\n  var allWords = wordsAssembler(words, wordIndex, incorrectWords);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, allWords);\n};\n\nvar WordState = styled.span.withConfig({\n  displayName: \"wordsDisplay__WordState\",\n  componentId: \"sc-15txsww-0\"\n})([\"color:\", \";color:\", \";color:\", \";display:inline-block;margin-right:0.7em;\"], function (props) {\n  return props.wasWrong ? 'red' : 'green';\n}, function (props) {\n  return props.current ? 'purple' : '';\n}, function (props) {\n  return props.upComing ? 'black' : '';\n});\nexport default WordDisplay;","map":{"version":3,"sources":["/Users/migueltrinidad/Play/typer/components/wordsDisplay.js"],"names":["styled","wordsAssembler","words","wordIndex","incorrectWords","map","word","index","includes","WordDisplay","props","allWords","WordState","span","wasWrong","current","upComing"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,SAAR,EAAmBC,cAAnB;AAAA,SACrBF,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,WACR,oBAAC,SAAD;AACE,MAAA,OAAO,EAAEJ,SAAS,KAAKI,KADzB;AAEE,MAAA,QAAQ,EAAEJ,SAAS,GAAGI,KAAZ,IAAqBH,cAAc,CAACI,QAAf,CAAwBD,KAAxB,CAFjC;AAGE,MAAA,QAAQ,EAAEJ,SAAS,GAAGI,KAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,IALH,CADQ;AAAA,GAAV,CADqB;AAAA,CAAvB;;AAYA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MACrBR,KADqB,GACgBQ,KADhB,CACrBR,KADqB;AAAA,MACdC,SADc,GACgBO,KADhB,CACdP,SADc;AAAA,MACHC,cADG,GACgBM,KADhB,CACHN,cADG;AAE7B,MAAMO,QAAQ,GAAGV,cAAc,CAACC,KAAD,EAAQC,SAAR,EAAmBC,cAAnB,CAA/B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,QADH,CADF;AAKD,CARD;;AAUA,IAAMC,SAAS,GAAGZ,MAAM,CAACa,IAAV;AAAA;AAAA;AAAA,kFACJ,UAAAH,KAAK;AAAA,SAAKA,KAAK,CAACI,QAAN,GAAiB,KAAjB,GAAyB,OAA9B;AAAA,CADD,EAEJ,UAAAJ,KAAK;AAAA,SAAKA,KAAK,CAACK,OAAN,GAAgB,QAAhB,GAA2B,EAAhC;AAAA,CAFD,EAGJ,UAAAL,KAAK;AAAA,SAAKA,KAAK,CAACM,QAAN,GAAiB,OAAjB,GAA2B,EAAhC;AAAA,CAHD,CAAf;AAQA,eAAeP,WAAf","sourcesContent":["import styled from 'styled-components';\n\nconst wordsAssembler = (words, wordIndex, incorrectWords) => (\n  words.map((word, index) => (\n    <WordState\n      current={wordIndex === index}\n      wasWrong={wordIndex > index && incorrectWords.includes(index)}\n      upComing={wordIndex < index}\n    >\n      {word}\n    </WordState>\n  ))\n);\n\nconst WordDisplay = (props) => {\n  const { words, wordIndex, incorrectWords } = props;\n  const allWords = wordsAssembler(words, wordIndex, incorrectWords);\n  return (\n    <p>\n      {allWords}\n    </p>\n  );\n};\n\nconst WordState = styled.span`\n  color: ${props => (props.wasWrong ? 'red' : 'green')};\n  color: ${props => (props.current ? 'purple' : '')};\n  color: ${props => (props.upComing ? 'black' : '')};\n  display:inline-block;\n  margin-right:0.7em;\n`;\n\nexport default WordDisplay;\n"]},"metadata":{},"sourceType":"module"}