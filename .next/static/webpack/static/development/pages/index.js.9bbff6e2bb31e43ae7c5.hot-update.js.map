{"version":3,"file":"static/webpack/static/development/pages/index.js.9bbff6e2bb31e43ae7c5.hot-update.js","sources":["webpack:///./components/inputBar.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// e.target.value,\n// incrementWordIndex,\n// currentWord,\n// setCorrect,\n// handleLetterAccuracy,\n\nconst checkSpace = (\n  userWord,\n  incrementWordIndex,\n  currentWord,\n  setCorrect,\n  handleLetterAccuracy,\n) => {\n  // hit space on empty word\n  if (userWord[0] === ' ') {\n    return '';\n  }\n  // handle next word, check for correctness\n  if (userWord[userWord.length - 1] === ' ') {\n    incrementWordIndex();\n    console.log(typeof userWord +'and' +typeof currentWord);\n    setCorrect(userWord === currentWord);\n    return '';\n  }\n  // if the letter was correect\n  if (userWord[userWord.length - 1] === currentWord[userWord.length - 1]) {\n    return userWord;\n  }\n  // if the letter was wrong\n  if (userWord[userWord.length - 1] !== currentWord[userWord.length - 1]) {\n    handleLetterAccuracy();\n    return userWord;\n  }\n  return userWord;\n};\n\nconst InputBar = (props) => {\n  const {\n    currentWord,\n    incrementWordIndex,\n    handleLetterAccuracy,\n    wasCorrect,\n    setCorrect,\n  } = props;\n  const [userWord, setUserWord] = useState('');\n\n  const letterIndex = userWord.length;\n  return (\n    <>\n      <p>\n        letter index\n        {` ${letterIndex}`}\n      </p>\n      <p>\n        the current is\n        {` ${currentWord}`}\n      </p>\n      <input\n        onChange={e => setUserWord(checkSpace(\n          e.target.value,\n          incrementWordIndex,\n          currentWord,\n          setCorrect,\n          handleLetterAccuracy,\n        ))}\n        value={userWord}\n      />\n      <p>\n        {wasCorrect && 'correct'}\n      </p>\n    </>\n  );\n};\n\nexport default InputBar;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAOA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}